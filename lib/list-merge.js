// Generated by CoffeeScript 1.6.2
(function() {
  var defaultComparator, mergeLists, root;

  defaultComparator = function(a, b) {
    if (a > b) {
      return 1;
    } else if (a === b) {
      return 0;
    } else {
      return -1;
    }
  };

  mergeLists = function(comparator, mergeFunction) {
    if (comparator == null) {
      comparator = defaultComparator;
    }
    if (mergeFunction == null) {
      mergeFunction = function(a, b) {
        return a;
      };
    }
    return function(left, right) {
      var mergeSorted;

      mergeSorted = function(left, right) {
        if (right.length === 0) {
          return left;
        } else if (left.length === 0) {
          return right;
        }
        switch (comparator(right[0], left[0])) {
          case 0:
            return [mergeFunction(right[0], left[0])].concat(mergeSorted(right.slice(1), left.slice(1)));
          case -1:
            return [right[0]].concat(mergeSorted(right.slice(1), left));
          case 1:
            return [left[0]].concat(mergeSorted(right, left.slice(1)));
        }
      };
      return mergeSorted(left.sort(comparator), right.sort(comparator));
    };
  };

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.mergeLists = mergeLists;

}).call(this);
